// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Component1$ReactTemplate = require("./Component1.bs.js");
var RenderProps$ReactTemplate = require("./RenderProps.bs.js");
var ChildrenAsProps$ReactTemplate = require("./ChildrenAsProps.bs.js");

var component = ReasonReact.reducerComponent("Example");

function s(prim) {
  return prim;
}

function make() {
  var click = function (_, self) {
    return Curry._1(self[/* send */3], /* Toggle */2);
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var message = "Counter " + String(self[/* state */1][/* count */0]);
              var printedState = message + " State is now shown";
              return React.createElement("div", undefined, React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */3], /* Increment */0);
                                })
                            }, "Increment"), React.createElement("button", {
                              onClick: (function () {
                                  return Curry._1(self[/* send */3], /* Decrement */1);
                                })
                            }, "Decrement"), React.createElement("div", undefined, React.createElement("button", {
                                  onClick: Curry._1(self[/* handle */0], click)
                                }, "Toggle the state")), ReasonReact.element(/* None */0, /* None */0, Component1$ReactTemplate.make(Curry._1(self[/* handle */0], click), printedState, /* array */[])), React.createElement("input", {
                              value: self[/* state */1][/* search */2],
                              onChange: (function ($$event) {
                                  return Curry._1(self[/* send */3], /* Search */[$$event.target.value]);
                                })
                            }), ReasonReact.element(/* None */0, /* None */0, ChildrenAsProps$ReactTemplate.make(self[/* state */1][/* search */2], (function (img, err) {
                                    var match = err !== "";
                                    return React.createElement("div", undefined, match ? React.createElement("p", undefined, err) : React.createElement("img", {
                                                      src: img
                                                    }));
                                  }))), ReasonReact.element(/* None */0, /* None */0, RenderProps$ReactTemplate.make((function (number) {
                                    return React.createElement("h1", undefined, String(number));
                                  }), /* array */[])));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* count */0,
                      /* show */false,
                      /* search */"Milenkoo"
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                switch (action) {
                  case 0 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* count */state[/* count */0] + 1 | 0,
                                  /* show */state[/* show */1],
                                  /* search */state[/* search */2]
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* count */state[/* count */0] - 1 | 0,
                                  /* show */state[/* show */1],
                                  /* search */state[/* search */2]
                                ]]);
                  case 2 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* count */state[/* count */0],
                                  /* show */!state[/* show */1],
                                  /* search */state[/* search */2]
                                ]]);
                  
                }
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* count */state[/* count */0],
                            /* show */state[/* show */1],
                            /* search */action[0]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.s = s;
exports.make = make;
/* component Not a pure module */
